@model IEnumerable<CoMan.Models.TopicModel>
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Topic database";
}

<h1>Topic database</h1>

@if ((await AuthorizationService.AuthorizeAsync(User, "RequireTeacher")).Succeeded
    || (await AuthorizationService.AuthorizeAsync(User, "RequireAdmin")).Succeeded)
{
    <p>
        <a asp-action="Create">Add topic</a>
    </p>
}

<table id="topics-table" class="table table-striped table-bordered dt-responsive" width="100%" cellspacing="0">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Title)</th>
            <th>@Html.DisplayNameFor(model => model.Author)</th>
            <th>@Html.DisplayNameFor(model => model.StudentLimit)</th>
            <th>@Html.DisplayNameFor(model => model.Status)</th>
            <th>@Html.DisplayNameFor(model => model.AddedDate)</th>
            <th></th>
            @if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdmin")).Succeeded)
            {
            <th></th>
            <th></th>
            }
        </tr>
    </thead>
</table>

@section Scripts {
    <script src="https://cdn.datatables.net/v/bs5/dt-1.13.4/datatables.min.js" asp-append-version="true"></script>
    <script asp-append-version="true">
        var table;

        $(document).ready(function () {
            table = $("#topics-table").DataTable({
                // Design Assets
                stateSave: true,
                autoWidth: true,
                // ServerSide Setups
                processing: true,
                serverSide: true,
                // Paging Setups
                paging: true,
                // Searching Setups
                searching: { regex: true },
                // Ajax Filter
                ajax: {
                    url: "/LoadTable",
                    type: "POST",
                    contentType: "application/json",
                    dataType: "json",
                    data: function (d) {
                        return JSON.stringify(d);
                    }
                },
                // Columns Setups
                columns: [
                    { data: "title" },
                    { data: "authorName" },
                    { data: "studentLimit" },
                    { data: "status" },
                    { data: "addedDate" }
                ],
                // Column Definitions
                columnDefs: [
                    { targets: "no-sort", orderable: false },
                    { targets: "no-search", searchable: false },
                    { targets: 0, width: "50%" },
                    {
                        targets: 5,
                        data: null,
                        defaultContent: "<a class='btn btn-link' role='button' href='#'>Details</a>",
                        render: function (data, type, row, meta) {
                            return "<a class='btn btn-link' role='button' href='/Topic/Details/" + data.id + "'>Details</a>";
                        },
                        orderable: false
                    }
                    @if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdmin")).Succeeded)
                    {
                    <text>
                    ,{
                        targets: 6,
                        data: null,
                        defaultContent: "<a class='btn btn-link' role='button' href='#'>Edit</a>",
                        render: function (data, type, row, meta) {
                            return "<a class='btn btn-link' role='button' href='/Topic/Edit/" + data.id + "'>Edit</a>";
                        },
                        orderable: false
                    },
                    {
                        targets: 7,
                        data: null,
                        defaultContent: "<a class='btn btn-link' role='button' href='#'>Delete</a>",
                        render: function (data, type, row, meta) {
                        return "<a class='btn btn-link' role='button' href='/Topic/Delete/" + data.id + "'>Delete</a>";
                        },
                        orderable: false
                    }
                    </text>
                    }
                ]
            });
        });
    </script>
}
