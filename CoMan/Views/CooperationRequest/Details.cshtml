@model CoMan.Models.CooperationRequestModel
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Cooperation request details";
}

<h1>Details</h1>

<div>
    <h4>Cooperation request details</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreationDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreationDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ConsiderationDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ConsiderationDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Student)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Student!.FirstName)
            @Html.DisplayFor(model => model.Student!.LastName)
            &nbsp;-&nbsp;
            @Html.DisplayFor(model => model.Student!.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Teacher)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Teacher!.FirstName)
            @Html.DisplayFor(model => model.Teacher!.LastName)
            &nbsp;-&nbsp;
            @Html.DisplayFor(model => model.Teacher!.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ApplicantComment)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ApplicantComment)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.RecipentComment)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.RecipentComment)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Status)
        </dd>
    </dl>
</div>
<div>
    @if ((await AuthorizationService.AuthorizeAsync(User, "RequireStudent")).Succeeded)
    {
        if (Model.Status == CooperationRequestStatus.Waiting)
        {
            @Html.ActionLink("Edit", "Edit", new { id = Model.Id })
            <text> | </text>
            @Html.ActionLink("Delete", "Delete", new { id = Model.Id })
            <text> | </text>
        }
    }
    @if ((await AuthorizationService.AuthorizeAsync(User, "RequireTeacher")).Succeeded)
    {
        if (Model.Status == CooperationRequestStatus.Waiting)
        {
            @Html.ActionLink("Accept","Create", "Cooperation", new {
                requestId = Model.Id,
                topicId = Model.Topic.Id,
                studentId = Model.Student!.Id,
                topic = Model.Topic.Title,
                student = Model.Student!.FirstName + " " + Model.Student.LastName
                }, null)
            <text> | </text>
            @Html.ActionLink("Reject", "Reject", new { id = Model.Id, action = "Reject" })
            <text> | </text>
        }
        else if (Model.Status == CooperationRequestStatus.Accepted)
        {
            @Html.ActionLink("Archive", "Archive", new { id = Model.Id })
            <text> | </text>
        }
    }
    <a asp-action="Index">Back to List</a>
</div>
